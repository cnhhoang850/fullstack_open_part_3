{"version":3,"sources":["components/form.js","components/book.js","components/heading.js","phone.js","components/noti.js","index.js"],"names":["Field","tag","value","handle","onChange","Form","handleSubmit","filter","handleFilter","newName","handleName","newNum","handleNum","onSubmit","type","Book","people","deleteHandle","map","n","name","num","onClick","id","Heading","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNum","setFilter","notiMessage","setNotiMesage","useEffect","phoneBook","console","log","toShow","person","toLowerCase","includes","event","preventDefault","todo","forEach","window","alert","find","changedPerson","toChange","confirm","setTimeout","catch","error","concat","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4af81784.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Field = ({tag, value, handle}) => (\r\n    <div>\r\n      {tag} <input value={value} onChange={handle} />\r\n    </div>\r\n)\r\n  \r\nconst Form = ({handleSubmit, filter, handleFilter, newName, handleName, newNum, handleNum}) => (\r\n    <>\r\n    <form onSubmit={handleSubmit}>\r\n      <Field tag=\"filter shown with \" value={filter} handle={handleFilter} />\r\n      <h2>add a new</h2>\r\n      <Field tag=\"name: \" value={newName} handle={handleName} />\r\n      <Field tag=\"number: \" value={newNum} handle={handleNum} />\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n    </>\r\n)\r\n\r\nexport default Form","import React from 'react'\r\n\r\nconst Book = ({people, deleteHandle}) => (\r\n    <>\r\n    {people.map(n => \r\n      <p>{n.name} {n.num} <button onClick={() => deleteHandle(n.id, n.name)}>delete</button></p>\r\n    )}\r\n    </>\r\n)\r\n\r\nexport default Book","import React from 'react'\r\n\r\nconst Heading = ({tag}) => (\r\n    <h1>{tag}</h1>\r\n)\r\n\r\nexport default Heading","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\nconst getAll = () => {\r\n   const request = axios.get(baseUrl)\r\n   return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n   return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n   return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst remove = (id) => {\r\n   return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default {\r\n       getAll,\r\n       create,\r\n       update,\r\n       remove\r\n   }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport Form from './components/form'\nimport Book from './components/book'\nimport Heading from './components/heading'\nimport axios from 'axios'\nimport phoneBook from './phone'\nimport './index.css'\nimport Notification from './components/noti'\n\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNum, setNewNum ] = useState('') \n  const [ filter, setFilter] = useState('')\n  const [notiMessage, setNotiMesage] = useState('')\n\n  useEffect(() => {\n    phoneBook\n      .getAll()\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response)\n      })\n  }, [])\n\n  const toShow = filter === '' ? \n  persons : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    let todo = true\n\n    persons.forEach(person => {\n\n      if (person.name === newName && person.num === newNum) {\n        window.alert(`${newName} is already in phonebook `)\n        todo = false\n      } else if (person.num === newNum) {\n        window.alert(`${newNum} is already in phonebook `)\n        todo = false\n      } else if (person.name === newName && person.num !== newNum) {\n        const person = persons.find(person => person.name === newName)\n        const changedPerson = {...person, num: newNum}\n        \n        let toChange = false\n        if (window.confirm(`${changedPerson.name} is already added to phonebook ,replace the old number with the new one?`)) {\n        toChange = true\n      }\n        if (toChange) {\n        phoneBook\n          .update(changedPerson.id, changedPerson)\n          .then(response => {\n            setNotiMesage(`${response.data.name} number is changed.`)\n            setTimeout(() => {\n              setNotiMesage(null)\n            }, 5000)\n            setPersons(persons.map(\n              person => person.id !== changedPerson.id ? person : response.data))\n            setNewName('') \n            setNewNum('')\n          })\n          .catch(error => {\n            setNotiMesage(`${error.response.data.error}`)\n            setTimeout(() => {\n              setNotiMesage(null)\n            }, 5000)\n            setNewName('') \n            setNewNum('')\n          })\n          \n          todo = false\n        } else {\n          todo = false\n        }\n      }\n    })\n    \n    if (todo === false) {\n      return\n    }\n\n    if (newName === '' || newNum === '') {\n      todo = false \n      window.alert(`please add both name and number `)\n    }\n\n    if (todo) {\n      phoneBook\n        .create({name:newName, num:newNum})\n        .then(response => {\n          setNotiMesage(`${response.data.name} is added to the server.`)\n          setTimeout(() => {\n            setNotiMesage(null)\n          }, 5000) \n\n          setPersons(persons.concat(response.data))\n\n          setNewName('') \n          setNewNum('')\n        })  \n        .catch(error => {\n          setNotiMesage(`${error.response.data.error}`)\n          setTimeout(() => {\n            setNotiMesage(null)\n          }, 5000)\n          setNewName('') \n          setNewNum('')\n        })\n    }\n\n  }\n\n  const handleDelete = (id, name) => { \n    let todo = false\n    if (window.confirm(`Do you really want to delete ${name}?`)) {\n      todo = true\n    }\n    if (todo) {\n      phoneBook\n      .remove(id)\n      .then(response => {\n        setNotiMesage(`${name}'s number is deleted.`)\n        setTimeout(() => {\n          setNotiMesage(null)\n        }, 5000)\n        setPersons(persons.filter(person => person.id !== id))\n      })\n      .catch(error => {\n        alert(\"something went wrong\")\n      })\n    }\n  }\n  \n  const handleFilterChange = (event) => {\n    event.preventDefault()\n    setFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumChange = (event) => {\n    setNewNum(event.target.value)\n  }\n\n\n  return (\n    <div>\n      <Heading tag=\"Phonebook\" />\n      {notiMessage === '' ? <></> : <Notification message={notiMessage}/>}\n      <Form \n        handleSubmit={handleSubmit} \n        filter={filter} \n        handleFilter={handleFilterChange} \n        newName={newName}\n        handleName={handleNameChange}\n        newNum={newNum}\n        handleNum={handleNumChange}\n      />      \n      <Heading tag=\"Numbers\" />\n      <Book people={toShow} deleteHandle={handleDelete} />\n      ...\n    </div>\n  )\n}\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}